<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gabriel Lopez</title><link>https://gabealopez.github.io/</link><description>Recent content on Gabriel Lopez</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 02 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://gabealopez.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>The History of BonziBuddy</title><link>https://gabealopez.github.io/posts/bonzibuddy/</link><pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate><guid>https://gabealopez.github.io/posts/bonzibuddy/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>If you are like many you might be asking what the heck BonziBuddy is. Well to put it simply it was one of the virtual assistants that was created back in the day of Windows XP to help out with everyday office tasks. Many virtual assistants like BonziBuddy were created at the time since many users did not like current default implementation from Microsoft&amp;rsquo;s virtual assistant named clippy. Because of this many people created many differing virtual assistants that had extended upon what clippy could do. One of these virtual assistants was named BonziBuddy along with his predecessor Peedy, made from a company named Bonzi. BonziBudder was made to help with pretty much everything that a user could do, however it wasn&amp;rsquo;t really all that helpful. Though many people did like the way it had talked and thus started getting a name for itself. At the time the speech engine that Bonzi had used for BonziBuddy was a new thing to people and thus was a nice novelty&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p></description></item><item><title>Salaries (WIP)</title><link>https://gabealopez.github.io/projects/data-analysis/salaries/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><guid>https://gabealopez.github.io/projects/data-analysis/salaries/</guid><description>&lt;h2 id="cybersecurity-salaries-data-analysis">Cybersecurity Salaries Data Analysis&lt;/h2>
&lt;p>The following is some data analysis I did on a dataset for cybersecurity salaries throughout the world. I wanted to find some interesting trends in the data that I had downloaded &lt;a href="https://www.kaggle.com/datasets/infosecjobs/global-salaries-in-cybersecurity-infosec/data">here&lt;/a> on Kaggle&lt;/p>
&lt;p>Overall there were some interesting trends within the data and others that made sense. One of these observations was in salaries over time where USD salaries had increased over time. Along with this observation, I had went to ask the question of wether or not location mattered when it came to USD salaries. Although the location question may seem trival, the data seemed to be a little more complicated than that.&lt;/p></description></item><item><title>The Birth of Computer Viruses: Origins and Evolution</title><link>https://gabealopez.github.io/posts/the-first-virus/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><guid>https://gabealopez.github.io/posts/the-first-virus/</guid><description>&lt;h2 id="self-replicating-automata">Self-Replicating Automata&lt;/h2>
&lt;p>Now the idea of having a program replicate itself was, actually, not new. The first real theory of a self-replicating program starts in the 1940s with a mathematician named John von Neumann. His designs called for a universal separator, which builds the machine from a copier which replicated a machine&amp;rsquo;s description. The separation he called for allowed for mutations, enabling the new automata to evolve much like real organisms&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. Furthermore, his research looked into two ways of which the automata spread. The first was that information was interpreted as instructions to build a copy and the second was where information was just copied into a separate instance.&lt;/p></description></item><item><title>The Origin of Hacking and the Evolution of it</title><link>https://gabealopez.github.io/posts/the-start-of-hacking/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><guid>https://gabealopez.github.io/posts/the-start-of-hacking/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Originally hacking was never really attributed to the way the Hollywood portrays it today. In it&amp;rsquo;s more original state, hacking was making something happen that wasn&amp;rsquo;t intended to do. This meaning that to hack it to make a contraption do something that it was not intended to do or supposed to do in the first place.&lt;/p>
&lt;p>For example, a drill is intended to be used to, well, drill holes and drill screws into walls. Now what if someone took that same drill and used it instead as a way to spin a top fast. Now this wasn&amp;rsquo;t the intended way of using the drill but you made this drill become the best top spinner in the world. Now in the case with computers, certain computers are designed to do a task, like holding data and restricting access to that data. But in the case of hacking, an attacker would make that computer show data to themselves that he does not have access to.&lt;/p></description></item><item><title>The Eternalblue Story</title><link>https://gabealopez.github.io/posts/eternal-blue/</link><pubDate>Sun, 17 Nov 2024 00:00:00 +0000</pubDate><guid>https://gabealopez.github.io/posts/eternal-blue/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>The story of the eternalblue vulnerability is quite an interesting one as it comes back to the ever-recurring issue of government spying and whether or not the ends justify the means when it comes to government spying for the sake of protection.&lt;/p>
&lt;h3 id="background-info">Background Info&lt;/h3>
&lt;p>Before getting into the events of what happened surrounding the discovery of the eternalblue vulnerability it is important to know what this vulnerability is in the first place. Eternalblue was a vulnerability in the file-sharing service SMB in various Windows operating systems. These operating systems included Windows Vista all the way to Windows Server 2016. This was done by using corroded packets sent to the service which allowed for remote code execution. According to NIST, this was designated with a CVS score of 8.8&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. To put this score into perspective usually anything ranging from a 6-1 is considered minor, 7 is somewhat a concern, and 8-10 is a major problem.&lt;/p></description></item><item><title>Kernel Maze Game</title><link>https://gabealopez.github.io/projects/operating-systems/project-explaination/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><guid>https://gabealopez.github.io/projects/operating-systems/project-explaination/</guid><description>&lt;h2 id="description">Description&lt;/h2>
&lt;p>This is an explaination and showcase of a program I made in my OS class that more or less produces a maze in the terminal from the kernel level&lt;/p></description></item><item><title>HTB Pentesting Checklist/Playbook</title><link>https://gabealopez.github.io/projects/cybersecurity/htb-pentesting-checklist-and-playbook/</link><pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate><guid>https://gabealopez.github.io/projects/cybersecurity/htb-pentesting-checklist-and-playbook/</guid><description>&lt;h2 id="enumeration">Enumeration&lt;/h2>
&lt;p>&lt;strong>NOTE:&lt;/strong> These steps are more general Ofc. Playbook gets more detailed later&lt;/p>
&lt;ol>
&lt;li>Run nmap scan with following command: &lt;code>nmap -p- -sVC -vv &amp;lt;IP Addr&amp;gt; -oA enum/nmap&lt;/code>&lt;/li>
&lt;li>Search on google for each port that is found on hacktricks for pentesting them&lt;/li>
&lt;li>Look for unusual ports that are not usually opened&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>NOTE:&lt;/strong> Focus on ports other than port 80/443 first as 80/443 will take a longer time to enumerate&lt;/p>
&lt;p>Overall for the ports I like to use &lt;a href="https://book.hacktricks.xyz/">https://book.hacktricks.xyz/&lt;/a> to go through a checklist for pentesting the port. For the ports below, I am summarizing the main things that I do for each port that are from Hacktricks&lt;/p></description></item><item><title>Red Team Tools</title><link>https://gabealopez.github.io/projects/cybersecurity/list-of-red-team-tools/</link><pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate><guid>https://gabealopez.github.io/projects/cybersecurity/list-of-red-team-tools/</guid><description>&lt;p>&lt;strong>Hi there, here is a list of red team tools I have used in CTFs:&lt;/strong>&lt;/p>
&lt;h2 id="directory-bruteforcing">Directory Bruteforcing&lt;/h2>
&lt;ul>
&lt;li>Feroxbuster - Recursive bruteforcing&lt;/li>
&lt;li>FUFF - Very flexible fuzzing tool&lt;/li>
&lt;/ul>
&lt;h2 id="web-proxies">Web Proxies&lt;/h2>
&lt;ul>
&lt;li>Burpsuite - Most popular web proxy&lt;/li>
&lt;li>OWASP ZAP - Opensource alternative to Burpsuite&lt;/li>
&lt;li>Inspect Element - The ghetto web proxy&lt;/li>
&lt;/ul>
&lt;h2 id="website-finger-printing-tools">Website Finger-Printing Tools&lt;/h2>
&lt;ul>
&lt;li>Whatweb - A command line tool to help identify the backend and frontend of a website&lt;/li>
&lt;li>Wappalyzer - Works similarly to Whatweb but is a browser extension instead&lt;/li>
&lt;/ul>
&lt;h2 id="sql-injection">SQL Injection&lt;/h2>
&lt;ul>
&lt;li>SQLmap - A nice tool to help automate discovering and exploiting SQL injections&lt;/li>
&lt;/ul>
&lt;h2 id="cryptography">Cryptography&lt;/h2>
&lt;ul>
&lt;li>CyberChef - Website based tool to help analyze and decrypt any encrypted text&lt;/li>
&lt;/ul>
&lt;h2 id="smb-tools">SMB Tools&lt;/h2>
&lt;ul>
&lt;li>Crackmapexec - Post exploitation tool when you have found credentials on an SMB server
&lt;ul>
&lt;li>Also a very helpful enumeration tool&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>SMB Client - A local linux tool to use SMB shares&lt;/li>
&lt;li>Enum4linux - Automation tool to enumeration tool
&lt;ul>
&lt;li>&lt;strong>NOTE:&lt;/strong> In actual pentests it is advised to not really use this tool as it creates too much noise for the client&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="active-directory">Active Directory&lt;/h2>
&lt;ul>
&lt;li>Blood Hound - A nice enumeration tool when you have an initial shell on a windows machine
&lt;ul>
&lt;li>This tools helps to produce a json file to import into the Blood Hound website so you can find a connection from your current user account to a domain admin&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Pando: The Trembling Giant</title><link>https://gabealopez.github.io/posts/pando/</link><pubDate>Sun, 10 Nov 2024 00:00:00 +0000</pubDate><guid>https://gabealopez.github.io/posts/pando/</guid><description>&lt;p>Was made aware of a tree a few days ago by a friend. It is called Pando. It is apparently the world&amp;rsquo;s largest tree.&lt;/p>
&lt;p>Here is a picture of it here:&lt;/p>
&lt;p>&lt;img src="https://gabealopez.github.io/nature/pando/regPando.jpg" alt="reg pando">&lt;/p>
&lt;p>It a tree that is located in Utah in the Fishlake National Forest and wasn&amp;rsquo;t realy recognized as a tree until 1976 when it rediscovered in a sense by two &lt;a href="https://www.friendsofpando.org/faq1pando101/" title="Pando FAQ">ecologists&lt;/a>. It&amp;rsquo;s pretty cool to look at when you see in the Fall too, when its leaves change to a bright almost yellow-orange color.&lt;/p></description></item></channel></rss>